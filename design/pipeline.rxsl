use lib::*;
use std::stage::Vertex;

graphics pipeline Base3D {
  groups {
    { object: ObjectRenderMatrix },
    { camera: Camera },
  }

  vertex shader {
    input { mesh: Standard, }

    fn main {
      let model_view_position = object.model_view * mesh.position;
      Vertex::ClipPosition = camera.projection * model_view_position;
      fragment.model_view_position = -model_view_position;
      fragment.normal = object.normal * mesh.normal;
      fragment.uv = mesh.uv;
    }
  }

  fragment shader {
    input {
      model_view_position: vec3<f32>,
      normal: vec3<f32>,
      uv: vec2<f32>
    }
  }
}

graphics pipeline BasicMaterial extend Base3D {
  extend groups {
    [0] {
      #[optional]
      color_map: Texture2D,
      #[optional]
      color_map_uv_matrix: mat3<f32>,
      color: vec3<f32>,
    }
  }

  vertex shader {
  }

  fragment shader {
  }
  
}