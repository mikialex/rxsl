use lib::*;
use std::stage::Vertex;

// static pipeline:
pipeline Base3D {
  meshes: [ StandardMesh ]
  components: [
    camera: Camera3D,
    dir_lights: DirectionalLights
    fog: Fog
  ]
}

// static compile to
// a type safe struct
struct Base3D {
  ...
}

// runtime behavior 

// compose up from zero

let shader_module = PipelineBuilder::new()
  .mesh(geometry)
  .component_abstract::<Camera3D>()
  .component(lights)
  .component(fog)
  .validate()?
  .compile()

// or compose on a type safe static one

let shader_module = PipelineBuilder::extend_from(base3d)
  .component(sth)
  .validate()?
  .compile()